{
  "title": "Step Collibra Writer",
  "headers": [
    "Contents:",
    "Step Collibra Writer",
    "Properties",
    "Endpoints",
    "Detailed Description",
    "Element Collibra Asset Writer Config",
    "Properties",
    "Element Collibra Asset Writer Column",
    "Properties",
    "Element Collibra Relation Writer Config",
    "Properties",
    "Element Collibra Writer Error Handler",
    "Properties",
    "Enum Error Action",
    "Values"
  ],
  "content": "The step specifically designed to allow user to import or update Assets, Attributes and Relations in Collibra. Step is utilizing Collibra Import API\n\tcreating Collibra import job based on the data on its input. For more information about Collibra Import API visit thisdocumentation article.\n\nThe step can work in three modes.\n\nIn this mode the step is importing just Assets and its Attributes. Each row in DQC processing is considered an Asset which\n\tshould be imported to Collibra. Each row has to contain all the important information for Asset to be imported in its columns.\n\nIn order for record to be imported to Collibra it has to contain information necessary to identify the imported Asset.\n\tThe information necessary to identify the Asset might be:The Id of the AssetThe combination of the Asset Name and Domain Name\n\nIf both of these conditions are not satisfied, the record will be rejected and sent to the rejectedAsset endpoint.\n\nFor every batch of 1000 not-rejected records one import job is created and sent to Collibra. Each Collibra import job created this way is tracked\n\tby the step and once finished the notification is logged containing the original message from Collibra describing the status of the job.\n\nThe step can create multiple import jobs at the same time (per 1000 records processed). The issue is that Collibra has hard limit\n\tfor number of running import jobs in parallel which is 4. It is important to have this in mind and reducing the parallelism and not starting multiple\n\tCollibra Writer Steps in the same plan.\n\nIn this mode the step is importing just Relations attempting to add or update Relations in Collibra based on the input data. Each row in DQC processing\n\tis considered a Relation which should be imported. In this mode the both source and target Asset is identified in the same way as while importing Assets.\n\tHowever, the step is not checking any data consistency in the input. Also importing Relations requires a knowledge of Relation type Id from Collibra in\n\torder to work. Therefore using the step to import relations is considered advanced.\n\nThe processing works the same as for the Assets mode and possible parallelism should be reduced.\n\nIn this mode one step can write both Assets and Relations. If this is the case, it will always first update\n\tthe Assets and only after that the Relations."
}