{
  "title": "Step English Stemmer",
  "headers": [
    "Contents:",
    "Step English Stemmer",
    "Properties",
    "Endpoints",
    "Detailed Description",
    "Element Configurable Tokenizer Config",
    "Properties",
    "Element Token Type",
    "Properties"
  ],
  "content": "Step uses Porter algorithm, originally published in Porter, 1980, An algorithm for suffix stripping, Program, Vol. 14, no. 3, pp 130-137,\n\nPublicly available at:http://tartarus.org/martin/PorterStemmer/def.txt\n\nStemming a word is conducted in several steps. After each step, the current word form is searched in user defined lookup. If the form is found in lookup, the stemming process stops. When no lookup file is supplied, all stemming steps are performed.\n\nOptional tokenizer may be configured to process composed records. The tokenization is done only for internal use. A record is tokenized, tokens are stemmed seprarately and then reassembled to one record. All non-alphabetic characters are passed through without any change.\n\nThe set of characters can be defined using the following (for detailed description seecharacter set):enumeration, e.g.abcdefinterval, e.g.a-fora-cd-f, etc. If the character-is intended to be part of the set, it must be defined at the very end of the definition.Link to predefined constant set of characters using bracket expression ([:and:]).\n\t\t\t\t\tWhen the characters \"[:\" or \":]\" are intended to be a part of the set, they must be\n\t\t\t\t\tdefined separately from the definition (not to be considered as beginning or definition set).There are alsopredefined character classesavailable.\n\t\n\t\t\t\t\tAn example of definition:[:uppercase:].Listed constants can also be used in an \"exclude\" form such as[:lowercase:-abc:], where\n\t\t\t\t\tcharacters \"abc\" are a list of exceptions in the defined characters set.\n\t\t\t\t\tAn example of such definition:[:uppercase:-A:](all capital letters except for 'A')merging - all possibilities listed above can be combined to create a single set,\n\t\t\t\t\t\te.g. a definition of a token that begins with a letter and continues with letters, numbers\n\t\t\t\t\t\tor a dash:<type tokenCharacters=\"[:letter:][:digit:]-\" tokenStartCharacters=\"[:letter:]\">"
}