{
  "title": "Step MDM Read",
  "headers": [
    "Contents:",
    "Step MDM Read",
    "Properties",
    "Endpoints",
    "Detailed Description",
    "Element Output Column",
    "Properties",
    "Element Search Expression",
    "Properties"
  ],
  "content": "This step should be used in an online service to create compound services with complex logic not achievable using just native MDM services.\n\nFor every input record, the step asks MDM to search for records of configured entity that satisfies the search criteria.\n                If multiple records are found the input record will be multiplied. Use Record Descriptor column to work with multiplied groups.\n\nThe number of returned records is limited by the sharedNME Runtime Property. Thenme.services.range.maxCountwhich is used also for NME Native Services. The default value is100.\n\nStep reads data directly via internal Java interface (not via HTTP call) and works only if NmeServerComponent is in the same JVM.\n\nIf there are multiple steps in one plan, they share the same transaction when accessing data, providing consistent data.\n                For example in a plan with MDM Read and MDM Identify steps, record is first processed by MDM Read, data is changed, record is processed by MDM Identify\n                - MDM Identify will see the same data as MDM Read because the change happened in another isolated transaction.\n                This applies for both MDM Read and MDM Identify step - both of them share the same transaction.\n                The level of consistency depends on used persistence and underlying database.\n                For read-only transactions, VldbPersistence does not track read operations, potentially allowing obsolete record versions to be retained by LTC, even if needed by the transaction.\n                For read-write transactions, VldbPersistence keeps old record versions and ensures repeatable read using MVCC.\n                To ensure consistency, you need to change the underlying database isolation level from READ COMMITTED (default for most databases) to REPEATABLE READ."
}