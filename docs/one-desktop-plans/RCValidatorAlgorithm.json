{
  "title": "Step RC Validator CZ",
  "headers": [
    "Contents:",
    "Step RC Validator CZ",
    "Properties",
    "Endpoints",
    "Scoring",
    "Detailed Description",
    "Example"
  ],
  "content": "The format of RC is the following:yymmddttt[t]The meaning of the fields and their restrictions follow:yy= last two digits of the year of the person's birth year. The allowed range is\n\t\t\t\t\t\t\t00-99mm= month in year of the person's birth day, starting at 1. In this value is \n\t\t\t\t\talso encoded the gender of the person. So allowed ranges are:01-12 : for male51-62 : for female21-32\t: for male - may appear only for dates after 1.4.2004 (including)71-82\t: for female - may appear only for dates after 1.4.2004 (including)Values 00,20,50,70 are considered as artificial dates, other values are considered as\n\t\t\t\t\tinvalid date definition.dd- day in month of the person's birth day, starting at 1. The allowed\n\t\t\t\t\trange, depending on the month, is 1-31. The value 00 is considered an artificial date, \n\t\t\t\t\tother values are considered invalid date definitions.RCs issued before 1.1.1954 must consist of 9 digits, RCs issued this date or later must\n\t\t\t\t\t  consist of 10 digitsall 10 digits numbers must fulfill the mod11 check. Assuming that:A = a numerical value of the first 9 digitsn = the numerical value of the 10th digitthe following equation must be true:A mod 11 = nIf the result of the modulo operation is 10, then 0 is considered.Examples:Input birth number:8151010043,A = 815101004, n = 3, A modulo 11 = 3,\n\t\t\t\t       \t\twhich implies that the sample birth number meets the condition.Input birth number:8102060110,A = 810206011, n = 0, A modulo 11 = 10, \n\t\t\t\t       \t\ti.e. result =0, and the input birth number also meets the condition.RCValidator automatically removes non-digit characters, checks all of above, so in order to be considered valid the RC must match all of these rules.\n\nThe implemented step depends on the provided input data and therefore its processing continues according to \n\t\tone of the following three scenarios:Scenario A: The input birth number is provided in the input, in which case \n\t\t\t\t\tthe step verifies the birth number. If supplementary information about birth date and\t\n\t\t\t\t\tgender is filled in, an\tadditional comparison with data computed from the input birth \n\t\t\t\t\tnumber is made. Identified data\tare written to output.Scenario B: The input birth number is not provided but additional information about gender \n\t\t\t\t\tand birth date can be read from the input. A birth number is generated and written to the \n\t\t\t\t\toutputRC Generatedtogether with gender and birth date input values.This scenario represents \"generation-mode\" when a missing RC is generated from provided gender\n\t\t\t\t\tand date information.Scenario C: The input birth number is not provided and both birth date and gender are missing. \n\t\t\t\t\tIn this\tcase, the birth number is not generated and output bindings are not set (contains\n\t\t\t\t\tnull values).The best case scenario is that all the output columns are filled in (input data came through the validation process\n    \t  successfully) and no scoring flag was set.\n\nIf the birth number is not present in the input, the implemented step attempts to generate afakebirth number. \n\t\t\tThis operation requires valid input birth date and gender values to be provided.\n\t      \tIf any of these two pieces of information is missing, the scoring flagRC_NOT_GENERATEDis set and \n\t      \tall algorithm outputs (RC Out,RC Generated,Gender Out,Birth Date Out) \n\t      \twill contain empty values.If thefakebirth number has been successfully generated, theRC_GENERATEDscoring flag is set.Notethat contrary to the previous versions that were generatingfakeRC numbers \n\t      \tdirectly to theRC Outoutput, now the generated RC numbers are written to the optionalRC Generatedoutput.See theoutputs description.\n\nGenerally the algorithm first tries to determine the date from the provided RC value and then verifies the rest of the \n\t\t\tinformation read from the RC against that date and provided hints. The algorithm first reads the RC value from the\n\t\t\tinput RC binding and cleans it up. Cleaning means that all non-digit characters are removed. Then the\n\t\t\tcleaned value is sent to validation.Generally, birth number validation includes:general RC length validationRC date guess and the following validations:artificial date validationvalidation of the date format of the date (valid month-day combinations, etc.)initial date guesscomparison with the allowed date range which is defined by the interval \n\t\t\t\t\t\t\t  <BirthNumberSince, today's date>dummy date validationcomparison of the determined date with the date hintRC gender recognition and the following validations:gender encoding format: checking gender-encoding-format vs. issue-era match.(Gender may be encoded in various forms depending on the RC issue era)comparison of the determined gender with the gender hinttrailer checking & fixingverification of trailer length(RCs may have different lengths depending on on the issue era)mod11 checktrailer fixing\n\nThe algorithm verifies RC values that (after cleansing) consist of:6 digits: in such case the flagRC_TRLR_MISSINGis set, and the number is considered \n\t\t\t\t\t  invalid, but date & gender validations are still performed and scored9 or 10 digits: RC is passed on to further validationsother lengths: RC is considered invalid, the flagRC_INVALIDis set and no further\n\t\t\t\t\t  validation is performed\n\nOnce the date string is read from the RC (the first 6 characters of the RC), it is checked for an artificial date. \n\t\t\tThe date is considered artificial if:its month part equals 0its date part equals 0this value is considered after gender decoding, so the RC date\n\t\t\t\t\t  is considered artificial if it contains these values for month in the input RC:\n\t\t\t\t\t  0 (male), 20 (extended male format), 50 (female), 70 (extended female format)When a date is considered artificial the flagRC_DATE_ARTIFis set and the whole RC is considered\n\t\t\tinvalid - no further validations are performed.\n\nValues read from the first 6 positions (after gender decoding) are tested if the date they represent is valid.\n\t\t\tIf some invalid date combination is detected (for example 30.2.1901 or 29.2.1901 - which are both invalid\n\t\t\tbecause date 30.2. has never existed, 29.2.1901 cannot exist since 1901 is not a leap year) then theFLAG_DATE_INVALIDflag is set, the whole RC is considered invalid and no further checks are\n\t\t\tperformed.\n\nAfter checking date fields separately the initial date guess is performed. \n\t\t\tThis value depends on the length of the RC:birth number length is 6:The birth number is assumed to be formed by the first six digits without trailer characters. \n\t\t\t   \t\tIf the year value is greater than 53 then 1900 is added; if the year \n\t\t\t\t    value is less than or equal to 53, the value 2000 is added. If the resulting year value denotes a year \n\t\t\t\t    in the future, 100 is subtracted from the value.birth number length is 9:The birth number is assumed to be in the full format except for the last digit of the trailer(i.e. yyyyyyxxx). \n\t\t\t\t \tIf the year value is greater than 53 then 1800 is added, if the year value is less than or equal to 53 \n\t\t\t\t \tthen 1900 is added.birth number length is 10:The birth number is assumed to be in the full format including the trailer. The year value is computed in the same \n\t\t\t\t \tway as for the 6-digit birth numbers.\n\nAfter this initial guess is made, the date value is corrected by adding 100 years if one of following \n\t\t\tsituations occur:the guessed date is before the date defined by theBirth Number Sinceattributethe guessed date is older than 1.4.2004 but gender encoding in the RC uses the extended form (seeRC format)This correction is not performed if it would break these rules:the resulting date must not be in the futurethere's a date hint defined that supports (matches) the originally guessed dateIf the correction cannot be performed because of the above rules then:for a date beforeBirth Number SincetheRC_DATE_BEFORE_BN_SINCEflag is set, \n\t\t\t\t\t  but further validations are still processedfor a mismatch of the date and gender-encoding theRC_DATE_INVALIDflag is set and no \n\t\t\t\t\t  further validation is performed\n\nAfter the date is determined, it is compared to theDummy Datevalue. If they match\n\t\t\ttheRC_DUMMY_DATEflag is set and the RC is considered invalid. If date is flagged as\n\t\t\tdummy, no further checks are performed.\n\nThe final date check compares the date guessed from the RC with the given date hint (if present). If they do not match,\n\t\t\ttheRC_DATE_MISMATCHis set and the RC is considered invalid, but further checks are still\n\t\t\tperformed.\n\nThe gender is recognized from the RC (seeRC format) and the  \n\t\t\tdetermined value is compared to the given gender hint (if defined). In case they are not equal theRC_GNDR_MISMATCHflag is set and the RC is considered invalid. Further validations are still\n\t\t\tprocessed.\n\nTrailer length validationThe trailer's length must match the era the RC was issued in (seeRC format)The algorithm compares the length of the trailer against the date guessed from the RC. If the trailer does not\n\t\t\t\t\tmatch the date, then the following attempts to fix the trailer are performed:extension of 9-digit RC to 10-digitsThis correction is invoked automatically (and cannot be influenced by the configuration). \n\t\t\t\t\t\t\tThe correction tries to extend the RC by appending a '0' digit to the beginning or to the end of the \n\t\t\t\t\t\t\ttrailer. The correction is performed only if:there's only one option how to fix the number (so numbers that can be fixed by adding '0' either to the\n\t\t\t\t\t\t\tbeginning or the end of the trailer are considered unrepairable - it is not possible to decide which \n\t\t\t\t\t\t\tcorrection is the right one)resulted number passes the mod11 trailer check (seeRC format)If the number was repaired theRC_TRLR_FIXEDflag is set. Otherwise theRC_TRLR_INVALIDis set and the RC is considered invalid.shortening 10-digit RC to 9-digitsThe correction tries to shorten a 10-digit RC to the 9-digit RC by removing a '0' from the beginning\n\t\t\t\t\t\t\tor the end of the trailer.mod11 trailer checkRC must pass the mod11 check as described in theRC formatdescription above.\n\nThe algorithm outputs the following values:RC (bindingRC Out) - contains verified/fixed RC from the input. Users may suppress writing invalid RCs\n\t  \t\t\t\tto this output by settingomitInvalidRc=true. It is also possible to choose whether to output the \n\t  \t\t\t\toriginal RC number or the cleansed one using the attributePreserve Input RC Value. See their descriptions\n\t  \t\t\t\tfor more details.generated RC (binding rcGenerated) - see theRC Generatedproperty description for more details.gender and date read from RC - these values are outputted always regardless on the overall validity of\n\t  \t\t\t\t  the RC. The only case when these values are not written out is the case when it was impossible to read\n\t  \t\t\t\t  or successfully parse the input RC value. This state is indicated by some of following flags:FLAG_RC_INVALIDFLAG_DATE_INVALIDFLAG_DATE_ARTIFFLAG_DATE_DUMMY"
}