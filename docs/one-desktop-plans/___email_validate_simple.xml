<?xml version='1.0' encoding='utf-8'?>
<configDoc date="2025-05-13 21:54:19" fileName="___email_validate_simple.comp" runtimeVersion="15.2.0.240425-7925-ed10bffb" xmlns:comm="http://www.ataccama.com/purity/comment" cfgFilePath="pathvar://COMPONENTS/___email_validate_simple.comp" screen="images/screen____email_validate_simple.comp.png" companyImage="images/logo_about.png" version="1.0">
  <generatorMeta date="2025-05-14 01:30:06" about="{1}

Version: {4} 
Runtime: {5} 
Build: {6} 

Copyright Â© 2002-{3} {2}. All rights reserved.

Your use of the product is subject to the {0} end user license agreement." name="Ataccama ONE Desktop" company="Ataccama Corporation"/>
  <configAlg image="images/InputStep.large.png" name="in (Integration Input)" class="com.ataccama.dqc.tasks.common.usersteps.io.InputStep">
    <properties>
      <columns>
        <columnDef name="in_email" type="STRING">
          <comm:comment>Source email address. It may contain a person&#39;s name if the email address is enclosed in &lt;&gt; brackets.</comm:comment>
        </columnDef>
      </columns>
      <shadowColumns/>
    </properties>
  </configAlg>
  <configAlg image="images/AlterFormat.large.png" name="Add Columns (Alter Format)" class="com.ataccama.dqc.tasks.flow.AlterFormat">
    <properties>
      <addedColumns>
        <addedColumn name="std_email" type="STRING">
          <comm:comment>Standardized value of the email address - contains only valid values.</comm:comment>
        </addedColumn>
        <addedColumn name="std_name" type="STRING">
          <comm:comment>Column that stores the email address owner if recognised.</comm:comment>
        </addedColumn>
        <addedColumn name="out_email" type="STRING">
          <comm:comment>The best existing value of the email address.</comm:comment>
        </addedColumn>
        <addedColumn name="exp_email" type="STRING">
          <comm:comment>Explanations if invalid.</comm:comment>
        </addedColumn>
        <addedColumn name="sco_email" type="INTEGER">
          <comm:comment>Data quality score for email address value.</comm:comment>
        </addedColumn>
      </addedColumns>
      <removedColumns/>
    </properties>
  </configAlg>
  <configAlg image="images/AlterFormat.large.png" name="Internal_columns (Alter Format)" class="com.ataccama.dqc.tasks.flow.AlterFormat">
    <properties>
      <addedColumns>
        <addedColumn name="pur_domain" type="STRING">
          <comm:comment>Standardized value of the domain of the email address - contains only valid values.</comm:comment>
        </addedColumn>
      </addedColumns>
      <removedColumns/>
    </properties>
  </configAlg>
  <configAlg image="images/ValidateEmailAlgorithm.large.png" name="Validate_email (Validate Email)" class="com.ataccama.dqc.tasks.clean.ValidateEmailAlgorithm">
    <properties outEmail="std_email" tldLookupFileName="pathvar://DATA/ext/lkp/___email_tld.lkp" in="in_email" outName="std_name">
      <scorer scoreColumn="sco_email" explanationColumn="exp_email">
        <scoringEntries>
          <scoringEntry explain="true" score="10000000" explainAs="EMAIL_EMPTY" key="EML_NULL"/>
          <scoringEntry explain="true" score="10000" explainAs="EMAIL_INVALID" key="EML_ADDRESS"/>
          <scoringEntry explain="true" score="10000" explainAs="EMAIL_INVALID" key="EML_TLD"/>
          <scoringEntry explain="true" score="10000" explainAs="EMAIL_AMBIGUOUS_DOMAIN" key="EML_AMBIGUOUS_DOMAIN"/>
        </scoringEntries>
      </scorer>
      <comm:comment>Validate email</comm:comment>
    </properties>
  </configAlg>
  <configAlg image="images/ColumnAssigner.large.png" name="Get_email&#39;s_domain (Column Assigner)" class="com.ataccama.dqc.tasks.expressions.ColumnAssigner">
    <properties>
      <assignments>
        <assignment expression="substr(std_email, indexOf(std_email, &#39;@&#39;, 0)+1, lastIndexOf(std_email, &#39;.&#39;) - indexOf(std_email, &#39;@&#39;, 0)-1)" column="pur_domain">
          <scorer>
            <scoringEntries>
              <scoringEntry explain="false" score="0" explainAs="CA_CHANGED" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
          <comm:comment>get the domain from standardized value. Substring from @ to last dot.</comm:comment>
        </assignment>
      </assignments>
      <comm:comment>Get the part of the domain from the standardized email input</comm:comment>
    </properties>
  </configAlg>
  <configAlg image="images/LookupAlgorithm.large.png" name="Temporary_domain_lookup (Lookup)" class="com.ataccama.dqc.tasks.clean.LookupAlgorithm">
    <properties maxDifference="0" tableFileName="pathvar://DATA/ext/lkp/___email_temporary_domains.lkp" prefix="false" foreignKeyColumn="pur_domain">
      <columns/>
      <scorer scoreColumn="sco_email" explanationColumn="exp_email">
        <scoringEntries>
          <scoringEntry explain="false" score="0" explainAs="LKP_NULL_ID" key="LKP_NULL_ID"/>
          <scoringEntry explain="false" score="0" explainAs="LKP_NOT_FOUND" key="LKP_NOT_FOUND"/>
          <scoringEntry explain="true" score="100" explainAs="EMAIL_TMP_DOMAIN" description="Email includes a temporary domain" key="LKP_FOUND"/>
          <scoringEntry explain="false" score="0" explainAs="LKP_FOUND_DUPL" key="LKP_FOUND_DUPL"/>
          <scoringEntry explain="false" score="0" explainAs="LKP_APPROX_USED" key="LKP_APPROX_USED"/>
        </scoringEntries>
      </scorer>
      <selectBestMatch/>
      <comm:comment>checking standardized email domain against list of temporary domains</comm:comment>
    </properties>
  </configAlg>
  <configAlg image="images/SimpleScoring.large.png" name="Set_score_and_explanations (Simple Scoring)" class="com.ataccama.dqc.tasks.scoring.SimpleScoring">
    <properties defaultScoreColumn="sco_email" defaultExplainColumn="exp_email">
      <scoringCases>
        <scoringCase score="1" condition="in_email is not std_email and std_email is not null" description="Email hase been cleansed. (removed &lt;&gt; brackets, or removed string before &lt;email&gt;" explanation="&#39;EMAIL_CLEANSED&#39;"/>
      </scoringCases>
      <comm:comment>Set score and explanation</comm:comment>
    </properties>
  </configAlg>
  <configAlg image="images/ColumnAssigner.large.png" name="Set_out_values (Column Assigner)" class="com.ataccama.dqc.tasks.expressions.ColumnAssigner">
    <properties>
      <assignments>
        <assignment expression="nvl(std_email, in_email)" column="out_email">
          <scorer>
            <scoringEntries>
              <scoringEntry explain="false" score="0" explainAs="CA_CHANGED" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
      </assignments>
      <comm:comment>set output values with prefix -out as best existing values</comm:comment>
    </properties>
  </configAlg>
  <configAlg image="images/AlterFormat.large.png" name="Remove_internal_columns (Alter Format)" class="com.ataccama.dqc.tasks.flow.AlterFormat">
    <properties>
      <addedColumns/>
      <removedColumns>
        <columnRef name="in_email"/>
        <columnRef name="pur_domain"/>
      </removedColumns>
      <comm:comment>Removes internal columns.</comm:comment>
    </properties>
  </configAlg>
  <configAlg image="images/OutputStep.large.png" name="out (Integration Output)" class="com.ataccama.dqc.tasks.common.usersteps.io.OutputStep">
    <properties enforceFormat="false">
      <requiredColumns>
        <requiredColumn name="std_email" type="STRING">
          <comm:comment>Standardized value of the email address - contains only valid values.</comm:comment>
        </requiredColumn>
        <requiredColumn name="std_name" type="STRING">
          <comm:comment>Column that stores the email address owner if recognised.</comm:comment>
        </requiredColumn>
        <requiredColumn name="out_email" type="STRING">
          <comm:comment>The best existing value of the email address.</comm:comment>
        </requiredColumn>
        <requiredColumn name="exp_email" type="STRING">
          <comm:comment>Explanations if invalid.</comm:comment>
        </requiredColumn>
        <requiredColumn name="sco_email" type="INTEGER">
          <comm:comment>Data quality score for email address value.</comm:comment>
        </requiredColumn>
      </requiredColumns>
    </properties>
  </configAlg>
  <referedBy name="06_party_component"/>
</configDoc>