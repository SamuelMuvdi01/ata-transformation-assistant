{
  "title": "Advanced Server Components",
  "headers": [
    "Advanced Server Components",
    "Contents:",
    "AsyncWriterComponent",
    "AuthenticationService",
    "DerbyComponent",
    "DtDbServerComponent",
    "HealthStateLogger",
    "HealthStateProviders",
    "HealthStateWebConsole",
    "JmsProviderComponent",
    "LoggingComponent",
    "VersionedFileSystemComponent"
  ],
  "content": "This component defines parameters for connecting and sending records fromAsyncWriter step.\n\t\tThe parameters are:nameName of the service. Used inserviceNameproperty ofAsyncWriter stepqueueSizeMaximal size of record queue. Default: 100.latencyTimeMaximal time the records read from queue are not flushed into target. Default: 60.targetSpecification of target into which records will be submitted.There are two types of target for now.\n\t\tFirst, plan target enables submitting of\n\t\trecords into another processing configured via component plan.\n\t\tSecond target simply writes records to log (intended mainly for debugging).\n\nThe AuthenticationService component is used to protect invoking of services by using a \n\tusername and password. At the moment only the HTTP BASIC algorithm is used, so there is no \n\tsecure encryption of usernames and passwords used. The component assigns some roles to each \n\trequest and then compares the list of assigned roles with the role required in order to be \n\tallowed to invoke the service.\n\nSeethis sectionfor more details about configuration.\n\nFollowing part starts Derby database as a part of the server.\n\nFollowing part starts Drill-through database as a part of the server.folder- required parameter, the destination folder has to exist before the start of the server, path is relative to /runtime folderport- optional parameter, used for connection to dtdb, if it is not specified then the default value is 5103\n\nThis component will log all sensor status changes to the standardly configured logger.\n\nThis component adds several sensors that will report health status of the server's parts such as the path \n\tvariables and database connections. The parameterspathVariableRefreshRateanddataSourceRefreshRatedefine the frequency (in seconds) how often it should refresh the health \n\tstatus of path variables and database connections.\n\nThis component adds section to the Admin Center that will display all sensor statuses.\n\nJmsProviderComponent is needed to define JMS connections and filters that should be applied on the connections.\n\nTheconnectionssection contains connection definition to be able to connect to the JMS server. Thenameattribute defines the identifier that will be used in references to the connection definition.\n\nThefilterssection contains filter definitions and their mapping to connections and input or output \n\t\tdestinations.\n\t\tFollowing filters are available:com.ataccama.dqc.jms.filters.JmsLoggingFilter- logs content of the request/response to the filecom.ataccama.dqc.jms.filters.JmsResponseTimeLogger- logs the time of the request processing to the logger\n\nThe component defines the logging configuration rules. The parameterconfigFilecontains path to thelogging configuration file.\n\nThe component defines the set of versioned filesystem folders. The parameterversionedFolderscontains list of paths to filesystem folders that should be versioned. Changed files are detected when the \n\trefresh command is executed and these files are replaced to actually running configurations.versionedFolderspaths are relative to the location of the ServerConfig.xml file or absolute paths."
}