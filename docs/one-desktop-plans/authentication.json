{
  "title": "Authentication & Authorization",
  "headers": [
    "Authentication & Authorization",
    "Contents:",
    "Introduction",
    "User authentication and role assignment",
    "User Authentication",
    "Role Mapping Providers",
    "Securing the Admin Center content",
    "Securing online services",
    "Securing by the HTTP filter"
  ],
  "content": "There are following areas where it is possible to control the access to the server.access from command line tools via internal server communication portaccess to the Admin Center contentaccess to the online servicesfiltering the web access\n\nThe server uses the concept of roles assigned to the authenticated user. User authentication methods and roles\n\tassignment is done by theAuthenticationServicecomponent.\n\nBased on the method(s) configured the AuthenticationService component authenticates the user that is accessing the \n\tserver and once the user is authenticated the component will use the role mapping providers to assign\n\troles to the user.\n\nAuthenticationService component defines several methods of authentication:TrustServerMethod- this method defines that there should be no authentication \n\t\t\t\tat all. If you define this authentication method, then all requests will get the \n\t\t\t\tidentity defined in theidentitysub-element. If you useTrustIdentityas \n\t\t\t\tin the example below, that identity will have all possible roles, so it will be \n\t\t\t\tallowed to execute all services.<method class=\"com.ataccama.dqc.communication.auth.server.TrustServerMethod\">\n\t<identity class=\"com.ataccama.dqc.communication.auth.server.TrustIdentity\">\n\t\t<name>Trusted User</name>\n\t</identity>\n</method>SecretServerMethod-  this method provides very simple security and can be used \n\t\t\t\tonly for internal communication, i.e. secret method cannot be used to protect access to \n\t\t\t\tdeployed web services. Secret method defines onepassphrasewhich has to be \n\t\t\t\tprovided. If the passphrase is correct, the request will have the assigned identity defined \n\t\t\t\tin the elementidentityas you can see in the example below. Here you may also \n\t\t\t\tuse the TrustIdentity as in the example in TrustServerMethod.<method class=\"com.ataccama.dqc.communication.auth.server.SecretServerMethod\">\n\t<secret>secret_word</secret>\n\t<identity class=\"com.ataccama.dqc.communication.auth.server.StandardIdentity\">\n\t\t<name>Secret User</name>\n\t\t<roles>\n\t\t\t<role>users</role>\n\t\t\t<role>admin</role>\n\t\t</roles>\n\t</identity>\n</method>PasswordServerMethod- this method is the recommended solution for password \n\t\t\t\tprotection of access to the server. PasswordServerMethod uses the provider, which \n\t\t\t\treturns the identity according the username and password extracted from the request. \n\t\t\t\tThe definition of the usernames, passwords and roles which form the identity together with the IP \n\t\t\t\taddress of the client depends on the provider.Currently there are following providers:FileBasedIdentifyProvider- takes user and role definitions from the XML configuration file. \n\t\t\t\t\tSeeFileBasedIdentityProviderconfiguration.LdapIdentityProvider- takes the identity from an LDAP source. SeeLdapIdentityProviderconfiguration.\n\nCurrently there are following providers:FileBasedIdentifyProvider- takes user and role definitions from the XML configuration file. \n\t\t\t\t\tSeeFileBasedIdentityProviderconfiguration.LdapIdentityProvider- takes the identity from an LDAP source. SeeLdapIdentityProviderconfiguration.\n\nFileBasedIdentityProvider is used to retrieved identity information from configuration file.\n\t\t\tIt uses the username and password provided in the request and if it is defined somewhere in theuserssection, it will assign roles defined as comma separated list in therolesattribute.\n\nIn order to provider further role assignment it is possible to configure role mapping provider.\tThe role \n\t\tmapping provider assigns roles based on the roles resolved by the authenticate method and requester's \n\t\tIP address.\n\nCurrently there are following role mapping providers:FileRoleMapping- gets the role assignment definition from the XML file. SeeFileRoleMappingconfiguration.\n\nThe FileRoleMapping provider reads role assignment configuration from the file.\tThe role will be assigned \n\t\t\tto the user if conditions defined in child elements are fulfilled. There are four elements which may be \n\t\t\tcombined and used to define various conditions.require- it is fulfilled if the currently evaluated request already has a role \n\t\t\t\tspecified by theroleattribute or if itssslattribute is set to true and \n\t\t\t\tthe request uses https protocol.location- it is fulfilled if the current request is processed from the location defined\n\t\t\t\tby the IP address and network mask specified in theipandmaskparametersand- is fulfilled if and only if all child element are fulfilledor- is fulfilled if at least one of the child elements is fulfilled\n\nSome server components provide possibility to secure access to the Admin Center content or functionality provided\n\tby the server component. Usually these components have in the configuration therequireRoleattribute\n\tthat is used to specify the role that must be assigned to the user in order to successfully access the content or \n\tfunctionality.\n\nCurrently following components have possibility to limit the access to the its functionality:  \n\tIt is possible to secure access to server components.WebConsoleComponent - if the requiredRole is specified only users with that role may access the Admin CenterVersionedFileSystemComponent - if the requiredRole is specified only users with that role may do filesystem refresh\n\nThe way how to configure the role assignment to the user is described in thesection here.\n\nOnline services can be secured by setting of therequireRoleattribute in the.onlineconfiguration\n\tfile. The service will be executed only if the user authenticated when accessing the .online service has assigned \n\trole that is required, otherwise the service call will end with he access denied error.\n\nThe way how to configure the role assignment to the user is described in thesection here.\n\nIt is possible to secure access by defining the URL patterns that will be accessible only to the users having\n\tspecified roles. This is done by configuring thesecurityFilterin the listener bean's context of theHttpDispatchercomponent."
}