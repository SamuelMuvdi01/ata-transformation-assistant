{
  "title": "Runtime configuration",
  "headers": [
    "Runtime configuration",
    "Contents:",
    "Introduction",
    "URL (Generic Server)",
    "JMS Connection",
    "Data source",
    "Format of path to the file and folder shortcuts",
    "Runtime components",
    "Parallelism level",
    "Logging",
    "resourcesFolder",
    "resources"
  ],
  "content": "Some [branding:product.name.abbreviation] runtime variables can be configured at the start of runtime from a\n\t\tconfiguration file supplied by theâ€“runtimeConfig <filename>parameter,\n\t\twhere<filename>is the name of the configuration file.The following [branding:product.name.abbreviation] runtime variables can be configured:data sourcescontributed configurationsURL (Generic Server)JMS Connectionfolder shortcutsruntime componentsinitial parallelism levelloggingresources folderresourcesThe configuration file can be created in the text editor or it can be created by exporting\n\tthe current settings of folder shortcuts and data sources (Databases) in the GUI.\n\nThe following [branding:product.name.abbreviation] runtime variables can be configured:data sourcescontributed configurationsURL (Generic Server)JMS Connectionfolder shortcutsruntime componentsinitial parallelism levelloggingresources folderresources\n\nThe configuration file is an XML file with the following format:\n\nThe data source represents information needed for a data source connection (e.g. for\n\t\t\tconnection to a database).\n\nA path to the file can be specified as an absolute path, relative path or using 'folder shorcuts'.\n\nA folder shortcut is a named path to the file or folder.\n\nThe format of a folder shortcut reference is as follows:pathvar://<folder shortcut name>/<remaining path>where<folder shortcut name>is the folder shortcut name,<remaining path>is the rest of the path including the \n\t\t\tfile name.\n\nExample of usage:Name of the folder shortcutMyPathValue of the folder shortcutD:/DQC/Example of path using folder shortcutpathvar://MyPath/MyProject/config.xmlReal path to the fileD:/DQC/MyProject/config.xml\n\nRuntime components are components that enhance the functionality of the [branding:product.name.abbreviation] server.\n\t\tTheir parameters are configured in a runtime configuration file. Currently only few\n\t\tcomponent types are supported. The type of component is given by setting the attributeclass.\n\nSupported types of runtime components:File Logger ComponentThis component is used formonitoringthe values of counters in the [branding:product.name.abbreviation] server and logging these values to a file.class = \"com.ataccama.dqc.processor.monitoring.file.FileLoggerComp\"(attributeclassalways has this value when FileLoggerComp is concerned)fileName= name of the file where the values of counters are loggedstdout= boolean flag, if set totrue, the values of counters are printed to the console (and to the file),\n\t\t\t\t\tif set tofalse, the values are logged only to the fileloggingIntervalInMins= counter values interval (in minutes)\n\nThis component is used formonitoringthe values of counters in the [branding:product.name.abbreviation] server and logging these values to a file.\n\nBy default each step is spawned in a single thread, but the initial number \n\t\tof threads can is defined byparallelismLevelproperty. \n\t\tNote that only filters can be run in parallel, complex steps ignore this\n\t\tsetting and always run in unmodifiable single step configuration.\n\nCurrently the maximum number of threads per thread is unlimited though\n\t\tit is a good practice not to exceed number of CPUs in the system.\n\nPath to a file containing configuration oflogging.\n       The path can be absolute or relative. Relative path is resolved to the location of this file.\n\nLocation of workflow resources, e.g., run result logs. Relative path is resolved to the location of this file.\n\nConfiguration of resources allocated for the workflow."
}